class Solution {
public:
    vector<vector<int>> minimumAbsDifference(vector<int>& arr) {
        // Step 1: Sort the input array in ascending order
        sort(arr.begin(), arr.end());
        
        // Step 2: Calculate the minimum difference between adjacent elements
        int minDiff = arr[1] - arr[0];

        for (int i = 1; i < arr.size() - 1; i++) {
            int diff = arr[i + 1] - arr[i];
            if (diff < minDiff) {
                minDiff = diff;
            }
        }

        // Step 3: Find all pairs with the minimum difference and store them in the result vector
        vector<vector<int>> result;
        for (int i = 1; i < arr.size(); i++) {
            if (arr[i] - arr[i - 1] == minDiff) {
                vector<int> pair = {arr[i - 1], arr[i]};
                result.push_back(pair);
            }
        }

        // Step 4: Return the result vector containing all pairs with the minimum difference
        return result;
    }
};
